/*
 * Copyright 2020 Sander Verdonschot <sander.verdonschot at gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.github.mangara.puzzles.gui;

import com.github.mangara.puzzles.data.CreatePuzzleSettings;
import com.github.mangara.puzzles.data.PuzzleType;
import java.awt.CardLayout;

public class PuzzleSettingsPanel extends javax.swing.JPanel {
    
    private final CardLayout layout;
    private final LogiquizSettingsPanel logiquizSettings;
    private final NonogramSettingsPanel nonogramSettings;
    private final SudokuSettingsPanel sudokuSettings;
    
    /**
     * Creates new form PuzzleSettingsPanel
     */
    public PuzzleSettingsPanel() {
        initComponents();
        
        layout = (CardLayout) getLayout();
 
        logiquizSettings = new LogiquizSettingsPanel();
        nonogramSettings = new NonogramSettingsPanel();
        sudokuSettings = new SudokuSettingsPanel();
        
        add(logiquizSettings, PuzzleType.LOGIQUIZ.name());
        add(nonogramSettings, PuzzleType.NONOGRAM.name());
        add(sudokuSettings, PuzzleType.SUDOKU.name());
    }
    
    public CreatePuzzleSettings getSettings(PuzzleType type) {
        switch (type) {
            case LOGIQUIZ: return logiquizSettings.getSettings();
            case NONOGRAM: return nonogramSettings.getSettings();
            case SUDOKU: return sudokuSettings.getSettings();
            default: throw new IllegalArgumentException("Unrecognized puzzle type");
        }
    }
    
    public void showPuzzleSettings(PuzzleType type) {
        layout.show(this, type.name());
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));
        setLayout(new java.awt.CardLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
